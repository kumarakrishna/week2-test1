{
  "name": "Week2-test1",
  "tagline": "",
  "body": "!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<head>\r\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n  <meta http-equiv=\"Content-Style-Type\" content=\"text/css\" />\r\n  <meta name=\"generator\" content=\"pandoc\" />\r\n  <title></title>\r\n  <style type=\"text/css\">code{white-space: pre;}</style>\r\n  <style type=\"text/css\">\r\ndiv.sourceCode { overflow-x: auto; }\r\ntable.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {\r\n  margin: 0; padding: 0; vertical-align: baseline; border: none; }\r\ntable.sourceCode { width: 100%; line-height: 100%; }\r\ntd.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }\r\ntd.sourceCode { padding-left: 5px; }\r\ncode > span.kw { color: #007020; font-weight: bold; }\r\ncode > span.dt { color: #902000; }\r\ncode > span.dv { color: #40a070; }\r\ncode > span.bn { color: #40a070; }\r\ncode > span.fl { color: #40a070; }\r\ncode > span.ch { color: #4070a0; }\r\ncode > span.st { color: #4070a0; }\r\ncode > span.co { color: #60a0b0; font-style: italic; }\r\ncode > span.ot { color: #007020; }\r\ncode > span.al { color: #ff0000; font-weight: bold; }\r\ncode > span.fu { color: #06287e; }\r\ncode > span.er { color: #ff0000; font-weight: bold; }\r\n  </style>\r\n</head>\r\n<body>\r\n<h2 id=\"formative-assignment-for-module-2-lesson-1-case-statement\">Formative Assignment for Module #2, Lesson #1: Case Statement</h2>\r\n<p>The overall goal of this assignment is to implement a program control mechanism using Ruby that</p>\r\n<ul>\r\n<li>properly tests for object equality</li>\r\n<li>properly tests for a <code>nil</code> value</li>\r\n<li>properly tests for a boolean <code>true</code>/<code>false</code> value</li>\r\n<li>implements these tests using a <code>case</code> statement</li>\r\n</ul>\r\n<p>The functional goal of the assignment is to rewrite a provided if/else statement using a case statement.</p>\r\n<h3 id=\"functional-requirements\">Functional Requirements</h3>\r\n<ol style=\"list-style-type: decimal\">\r\n<li><p>Re-write the following if/else statement using a <code>case</code> statement in Ruby.</p>\r\n<div class=\"sourceCode\"><pre class=\"sourceCode ruby\"><code class=\"sourceCode ruby\">some_var = <span class=\"st\">&quot;false&quot;</span>\r\nanother_var = <span class=\"st\">&quot;nil&quot;</span>\r\n\r\n<span class=\"kw\">if</span> some_var == <span class=\"st\">&quot;pink elephant&quot;</span>\r\n  puts <span class=\"st\">&quot;Don&#39;t think about the pink elephant!&quot;</span>\r\n\r\n<span class=\"kw\">elsif</span> another_var.nil?\r\n  puts <span class=\"st\">&quot;Question mark in the method name?&quot;</span>\r\n\r\n<span class=\"kw\">elsif</span> some_var == <span class=\"dv\">false</span>\r\n  puts <span class=\"st\">&quot;Looks like this one should execute&quot;</span>\r\n\r\n<span class=\"kw\">else</span>\r\n  puts <span class=\"st\">&quot;I guess nothing matched... But why?&quot;</span>\r\n<span class=\"kw\">end</span></code></pre></div></li>\r\n<li><p>Analyze the outcome of the original script and state the reasons why each of the first three (3) tests fail and how they could be made to succeed.</p>\r\n<pre class=\"shell\"><code>$ ruby module2_lesson1_formative.rb\r\n\r\nI guess nothing matched... But why?</code></pre>\r\n<p>Change the source code of the solution to verify your conclusions.</p></li>\r\n</ol>\r\n<h3 id=\"getting-started\">Getting Started</h3>\r\n<ol style=\"list-style-type: decimal\">\r\n<li><p>Download and extract the starter set of files. The root directory of the student-start will be referred to as the root directory of your solution.</p>\r\n<pre class=\"text\"><code>--- student-start\r\n   |-- .rspec(important hidden file)\r\n   |-- module2_lesson1_formative.rb\r\n   `-- spec\r\n       |-- lesson1_spec.rb\r\n       `-- spec_helper.rb</code></pre>\r\n<ul>\r\n<li>.rspec - configuration file for unit tests. If you move your files you must take care to also copy this file.</li>\r\n<li>module2_lesson1_formative.rb - contains the starting if/else statements. Your solution must be placed within this file.</li>\r\n<li>spec - this directory contains tests to verify your solution. You should not modify anything in this directory</li>\r\n</ul></li>\r\n<li><p>Install the following gems used by the rspec unit tests. You may have some of these already installed.</p>\r\n<pre class=\"shell\"><code>$ gem install rspec\r\n$ gem install rspec-its</code></pre></li>\r\n<li><p>Run the provided Ruby script containing the if/else</p>\r\n<pre class=\"shell\"><code>$ ruby module2_lesson1_formative.rb\r\n\r\nI guess nothing matched... But why?</code></pre></li>\r\n<li><p>Run the rspec command to execute the unit tests within the spec directory. This command should be run from the root directory of the project. This should result in several failures until you complete your solution.</p>\r\n<pre class=\"shell\"><code>$ rspec\r\n\r\n.FFFF\r\n\r\nFailures:\r\n...\r\nFinished in 0.02247 seconds (files took 0.1567 seconds to load)\r\n5 examples, 4 failures\r\n\r\nFailed examples:\r\n\r\nrspec ./spec/case_spec.rb:17 # lesson1 check implementation remove if clause\r\nrspec ./spec/case_spec.rb:21 # lesson1 check implementation remove elsif clause\r\nrspec ./spec/case_spec.rb:25 # lesson1 check implementation remove elsif clause\r\nrspec ./spec/case_spec.rb:29 # lesson1 check implementation missing case</code></pre></li>\r\n<li><p>Implement the solution and re-test.</p></li>\r\n</ol>\r\n<h3 id=\"technical-requirements\">Technical Requirements</h3>\r\n<ol style=\"list-style-type: decimal\">\r\n<li><p>Implement all parts of this assignment within the module2_lesson1_formative.rb file in the root directory of your solution. The grader will load this specific file from this location.</p></li>\r\n<li><p>Remove all traces of <code>if</code>, <code>elsif</code>.</p></li>\r\n<li><p>Re-implement the solution in terms of <code>case</code> and associated constructs.</p></li>\r\n<li><p>Return the same result as the initial solution after applying the case statement.</p></li>\r\n</ol>\r\n<h3 id=\"self-gradingfeedback\">Self Grading/Feedback</h3>\r\n<p>Unit tests have been provided in the bootstrap files that can be used to evaluate your solution. They must be run from the same directory as your solution.</p>\r\n<pre class=\"shell\"><code>$ rspec\r\n\r\nFinished in 0.00304 seconds (files took 0.16353 seconds to load)\r\n5 examples, 0 failures</code></pre>\r\n<h3 id=\"submission\">Submission</h3>\r\n<p>There is no submission required for this assignment but the skills learned will be part of a follow-on assignment so please complete this to the requirements of the unit test.</p>\r\n</body>\r\n</html>\r\nStatus API Training Shop Blog About\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}